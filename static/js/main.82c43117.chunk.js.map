{"version":3,"sources":["components/TodoList.tsx","components/NewTodo.tsx","App.tsx","index.tsx"],"names":["TodoList","props","items","map","item","text","onClick","onDeleteTodo","id","NewTodo","textInputRef","useRef","onSubmit","event","preventDefault","enteredText","current","value","onAddTodo","className","htmlFor","type","ref","App","useState","todos","setTodos","prevTodos","Date","toISOString","filter","todo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAoBeA,EAZ2B,SAACC,GAEvC,OAAO,6BACFA,EAAMC,MAAMC,KAAI,SAAAC,GAAI,OACjB,+BACI,+BAAOA,EAAKC,OACZ,wBAAQC,QAAS,WAAOL,EAAMM,aAAaH,EAAKI,KAAhD,sBAFKJ,EAAKI,UCeXC,G,MApByB,SAACR,GACrC,IAAMS,EAAeC,iBAAyB,MAQ9C,OACI,uBAAMC,SAPgB,SAACC,GACvBA,EAAMC,iBACN,IAAMC,EAAcL,EAAaM,QAASC,MAC1ChB,EAAMiB,UAAUH,IAIhB,UACI,sBAAKI,UAAU,eAAf,UACI,uBAAOC,QAAQ,YAAf,uBACA,uBAAOC,KAAK,OAAOb,GAAG,YAAYc,IAAKZ,OAE3C,wBAAQW,KAAK,SAAb,2BCSGE,EAzBO,WAElB,MAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OACI,sBAAKP,UAAU,MAAf,UACI,2CACA,cAAC,EAAD,CAASD,UAfM,SAACb,GACpBqB,GAAS,SAAAC,GAAS,4BAAQA,GAAR,CACd,CAACnB,IAAG,IAAIoB,MAAOC,cAAexB,KAAMA,WAcpC,cAAC,EAAD,CAAUH,MAAOuB,EAAOlB,aAVN,SAACC,GACvBkB,GAAS,SAAAC,GACL,OAAOA,EAAUG,QAAO,SAAAC,GAAI,OAAGA,EAAKvB,KAAOA,eCbvDwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.82c43117.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './TodoList.css'\r\n\r\ninterface TodoListProps {\r\n    items:{id:string, text:string}[];\r\n    onDeleteTodo: (id:string) => void;\r\n}\r\n\r\nconst TodoList: React.FC<TodoListProps> = (props) => {\r\n\r\n    return <ul>\r\n        {props.items.map(item => (\r\n            <li key={item.id}>\r\n                <span>{item.text}</span>\r\n                <button onClick={() => {props.onDeleteTodo(item.id)}}>DELETE</button>\r\n            </li>)\r\n        )}\r\n    </ul>\r\n}\r\n\r\nexport default TodoList;","import React, { useRef } from \"react\";\r\nimport './NewTodo.css'\r\n\r\ntype NewTodoProps = {\r\n    onAddTodo: (text:string) => void;\r\n}\r\n\r\nconst NewTodo: React.FC<NewTodoProps> = (props) => {\r\n    const textInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const todoSubmitHandler = (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n        const enteredText = textInputRef.current!.value;\r\n        props.onAddTodo(enteredText);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={todoSubmitHandler}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"todo-text\">Todo text</label>\r\n                <input type=\"text\" id=\"todo-text\" ref={textInputRef}/>\r\n            </div>\r\n            <button type=\"submit\">ADD TODO</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewTodo;","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport TodoList from \"./components/TodoList\";\r\nimport NewTodo from \"./components/NewTodo\";\r\nimport {Todo} from \"./todo.module\";\r\n\r\nconst App: React.FC = () => {\r\n\r\n    const [todos, setTodos] = useState<Todo[]>([]);\r\n\r\n    const todoAddHandler = (text: string) => {\r\n        setTodos(prevTodos => [...prevTodos,\r\n            {id:new Date().toISOString(), text: text}]\r\n        );\r\n    }\r\n\r\n    const todoDeleteHandler = (id:string) => {\r\n        setTodos(prevTodos => {\r\n            return prevTodos.filter(todo=> todo.id !== id);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>TODO LIST</h1>\r\n            <NewTodo onAddTodo={todoAddHandler}/>\r\n            <TodoList items={todos} onDeleteTodo={todoDeleteHandler}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}